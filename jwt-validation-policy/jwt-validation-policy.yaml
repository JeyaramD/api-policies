--- 
category: Security
configuration: 
  - 
    description: "Specifies the URL to obtain keys for JWT signature verification."
    name: "keys_host"
    propertyName: keys_host
    sensitive: false
    type: string
    defaultValue: "login.microsoftonline.com"
  - 
    description: "Specifies the URL to obtain keys for JWT signature verification."
    name: "keys_base_path"
    propertyName: keys_base_path
    sensitive: false
    type: string
    defaultValue: "common/discovery/keys"
  - 
    description: "Specifies the URL to obtain keys for JWT signature verification."
    name: "keys_port"
    propertyName: keys_port
    sensitive: false
    type: string
    defaultValue: "80"
  - 
    description: "Specifies the requested audience of JWT."
    name: "Audience"
    propertyName: audience
    sensitive: false
    type: string
    defaultValue: "https://graph.windows.net"
    allowMultiple: true
  - 
    description: "Specifies the issuer of JWT."
    name: "Issuer"
    propertyName: issuer
    sensitive: false
    type: string
    defaultValue: 
  - 
    description: "how many keys to cache?"
    name: "cacheEntries"
    propertyName: cache_entries
    sensitive: false
    type: string
    defaultValue: "100"
  - 
    description: "When should the cache entries expire?"
    name: "cacheTTL"
    propertyName: cache_ttl
    sensitive: false
    type: string
    defaultValue: "300000"
  - 
    description: "How often should TTL be evaluated?"
    name: "cacheInterval"
    propertyName: cache_interval
    sensitive: false
    type: string
    defaultValue: "30000"  
description: "Validates JWT stored in header."
id: jwt-policy
name: "JWT policy"
providedCharacteristics: 
  - "OAuth 2.0 protected"
requiredCharacteristics: []
requiresConnectivity: false
resourceLevelSupported: true
standalone: true
type: custom
ramlV1Snippet: |
 #%RAML 1.0 Trait
  headers:
    Authorization:
      description: "Used to send a valid OAuth 2 based JWT."
      type: string 
  responses: 
    401:
      description: Unauthorised reponses
      body: 
        application/json:
          examples: 
            aud-invalid: '{ "error" : "JWT aud is invalid" }'
            iss-invalid: '{ "error" : "JWT iss is invalid" }'
            expiry: '{ "error" : "JWT has expired" }'
            signature-invalid: '{ "error" : "JWT has invalid signature"}'
            missing-header: '{ "error" : " Authorization header not provided" }'
            invalid-format: '{ "error" : "Authorization header has invalid format" }'
    403: